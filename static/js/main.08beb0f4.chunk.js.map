{"version":3,"sources":["assets/TESTdarkside.jpeg","config/firebaseConfig.js","components/auth/SignIn.js","components/auth/SignUp.js","components/auth/ChangePassword.js","components/list-items/SongListItem.js","components/main-content/SongWall.js","components/list-items/PublishListItem.js","components/main-content/Studio.js","components/main-content/RecordSong.js","components/main-content/PostSong.js","components/main-content/EditProfile.js","components/list-items/ProfileSongItem.js","components/main-content/Profile.js","components/main-content/SongDetails.js","components/music-player/TopBarPlayer.js","App.js","js/serviceWorker.js","index.js","assets/TESTprofile-image.png","assets/corner-logo-blinq.png"],"names":["module","exports","__webpack_require__","p","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","Object","classCallCheck","this","firebase","apps","length","initializeApp","db","database","auth","storage","SignIn","props","_this","possibleConstructorReturn","getPrototypeOf","call","handleUsernameChange","event","setState","username","target","value","handlePasswordChange","password","handleLogin","hideSigninFields","state","console","log","concat","validateEmail","signInWithEmailAndPassword","then","signIn","catch","error","errorCode","code","errorMessage","message","alert","showSigninFields","keyPress","e","keyCode","SHOWFIELDS","testEmail","test","String","toLowerCase","testPswd","react_default","a","createElement","id","htmlFor","onChange","type","onKeyDown","onClick","Component","SignUp","hideSignupFields","showSignupFields","handleSubmit","validatePassword","createUserWithEmailAndPassword","handleGotoSignIn","gotoSignIn","onAuthStateChanged","user","postUserToFirebase","uid","email","timestamp","Date","getTime","userData","createdAt","updatedAt","updates","ref","update","ChangePassword","handleResetPassword","sendPasswordResetEmail","SongListItem","handlePlay","song","songName","setSong","handleUploaderClick","uploader","setProfile","handleSongNameClick","setSongDetails","duration","s","className","src","TESTSongArt","alt","formatMinutesSeconds","artist","Intl","DateTimeFormat","year","month","day","format","recorded","info","SongWall","getSongs","child","on","snapshot","previousSongs","songs","push","url","val","uploaderName","uploaded","published","handleSetSong","setValue","gotoProfile","gotoSongDetails","lastProps","_this2","map","list_items_SongListItem","key","PublishListItem","playSong","handlePublishPressed","pubSong","undefined","pub","remove","unpub","Studio","handleUpload","goto","handleRecord","handlePlaySong","UID","list_items_PublishListItem","RecordSong","startRecording","audioChunks","mediaRecorder","start","recording","stopRecording","stop","saving","saveAudio","handleRecordBtn","navigator","mediaDevices","getUserMedia","audio","video","stream","MediaRecorder","ondataavailable","data","size","audioBlob","songData","_this3","newPostKey","put","contentType","getDownloadURL","Blob","getBlobDuration","postToFirebase","Math","floor","_this4","PostSong","handleSongNameChange","handleArtistNameChange","artistName","handleSongInfoChange","songInfo","showForm","songname","date","storageRef","file","document","querySelector","files","metadata","accept","EditProfile","gotoPublicProfile","handleChangePassword","name","TESTprofileImage","ProfileSongItem","songLength","Profile","getUser","profileId","errorObject","list_items_ProfileSongItem","songId","TESTimage","TopBarPlayer","handlePlayOrPause","audioPlayer","ended","paused","play","pause","handleSeekBarClick","seekRatio","pageX","offsetLeft","seekBar","current","offsetWidth","currentTime","handleVolumeBarClick","volumeRatio","pageY","offsetTop","volumeBar","offsetHeight","volume","musicPosition","volumePosition","songDuration","currentPosition","Audio","loop","addEventListener","position","React","createRef","style","width","height","App","getUsername","handleSignOut","signOut","handleSignIn","mainContent","currentSong","setMainContent","handleSearch","openSongWall","openPostSong","openStudio","openRecord","openEditProfile","viewProfileId","viewSong","once","music_player_TopBarPlayer","cornerLogo","auth_SignIn","main_content_SongWall","main_content_Studio","main_content_PostSong","main_content_RecordSong","main_content_EditProfile","auth_ChangePassword","main_content_Profile","SongDetails","auth_SignUp","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.08beb0f4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/TESTdarkside.2bd292a8.jpeg\";","import firebase from 'firebase/app'\r\nimport 'firebase/database'\r\nimport 'firebase/auth' \r\nimport 'firebase/storage'\r\n\r\n\r\n// Initialize Firebase\r\nvar config = {\r\n    apiKey: \"AIzaSyBLea3SENzTDx8fHj3oo3vktAF-7B3jyXQ\",\r\n    authDomain: \"blinq-43545.firebaseapp.com\",\r\n    databaseURL: \"https://blinq-43545.firebaseio.com\",\r\n    projectId: \"blinq-43545\",\r\n    storageBucket: \"blinq-43545.appspot.com\",\r\n    messagingSenderId: \"234958171789\"\r\n};\r\n\r\nclass Firebase {\r\n    constructor() {\r\n        if (!firebase.apps.length) {\r\n            firebase.initializeApp(config);\r\n        }\r\n\r\n        this.db = firebase.database();\r\n        this.auth = firebase.auth();\r\n        this.storage = firebase.storage();\r\n    }\r\n}\r\n\r\nexport default Firebase;\r\n","import React, { Component } from 'react';\r\nimport '../../styles/App.css';\r\nimport Firebase from '../../config/firebaseConfig.js'\r\n\r\n\r\nclass SignIn extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            SHOWFIELDS: true\r\n        };\r\n\r\n        this.firebase = new Firebase();\r\n    }\r\n\r\n    handleUsernameChange = (event) => {\r\n        this.setState({ username: event.target.value });\r\n    }\r\n\r\n    handlePasswordChange = (event) => {\r\n        this.setState({ password: event.target.value });\r\n    }\r\n\r\n    validateEmail(testEmail) {\r\n        var emailRegex = /^\\S+@\\S+$/;\r\n        return emailRegex.test(String(testEmail).toLowerCase());\r\n    }\r\n\r\n    validatePassword(testPswd) {\r\n        var paswdRegex = /^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{7,15}$/;\r\n        return paswdRegex.test(String(testPswd));\r\n    }\r\n\r\n    handleLogin = () => {\r\n        this.hideSigninFields();\r\n\r\n        let username = this.state.username;\r\n        let password = this.state.password;\r\n        console.log(`SignUp submit pressed - username ${username}`);\r\n        if (!this.validateEmail(username)) {\r\n            alert('Bad email me thinks :(')\r\n            return;\r\n        }\r\n\r\n\r\n\r\n        // THE BELOW VALIDATION MAY CLASH WITH RULES OF FIREBASE PASSWORD UPDATE, SO COMMENTING OUT TIL FURTHER THOUGHT THROUGH\r\n        // if (!this.validatePassword(password)) {\r\n        //     alert('Bad password. Must be 7-15 characters with at least 1 numeric digit and a special character.')\r\n        //     return;\r\n        // }\r\n\r\n\r\n        this.setState({\r\n            username: '',\r\n            password: ''\r\n        });\r\n\r\n        this.firebase.auth.signInWithEmailAndPassword(username, password)\r\n            .then(() => {\r\n                this.props.signIn(\"songwall\");\r\n                return;\r\n            })\r\n            .catch((error) => {\r\n                // Handle Errors here.\r\n                var errorCode = error.code;\r\n                var errorMessage = error.message;\r\n\r\n                alert(`${errorCode}: ${errorMessage}`);\r\n                this.showSigninFields();\r\n            });\r\n\r\n    }\r\n\r\n    keyPress = (e) => {\r\n        // handle Enter pressed\r\n        if (e.keyCode === 13) {\r\n            this.handleLogin();\r\n        }\r\n    }\r\n\r\n    hideSigninFields = () => {\r\n        this.setState({ SHOWFIELDS: false });\r\n    }\r\n\r\n    showSigninFields = () => {\r\n        this.setState({ SHOWFIELDS: true });\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.SHOWFIELDS) {\r\n            return (\r\n                <form id=\"signin-form\">\r\n                    <label htmlFor=\"signin-username\">E-mail</label>\r\n                    <input id=\"signin-username\" value={this.state.username} onChange={this.handleUsernameChange} />\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input type=\"password\" id=\"signin-password\" onKeyDown={this.keyPress} value={this.state.password} onChange={this.handlePasswordChange} />\r\n                    <div>\r\n                        <button id=\"submit-signin-btn\" onClick={this.handleLogin} > Sign in! </button>\r\n                    </div>\r\n                </form>\r\n            );\r\n        } else {\r\n            return (\r\n                <div>\r\n                    One Moment...\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default SignIn;\r\n","import React, { Component } from 'react';\r\nimport '../../styles/App.css';\r\nimport Firebase from '../../config/firebaseConfig.js'\r\n\r\n\r\nclass SignUp extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            SHOWFIELDS: false\r\n        };\r\n\r\n        this.firebase = new Firebase()\r\n\r\n        this.firebase.auth.onAuthStateChanged((user) => {\r\n            if (user) {\r\n                this.postUserToFirebase(user.uid, user.email);\r\n            } else {\r\n                this.showSignupFields();\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    postUserToFirebase(uid, username) {\r\n        let date = new Date()\r\n        let timestamp = date.getTime()\r\n\r\n        // A user entry.\r\n        var userData = {\r\n            uid: uid,\r\n            username: username,\r\n            email: username,\r\n            createdAt: timestamp,\r\n            updatedAt: timestamp,\r\n        };\r\n\r\n        // Write the new post's data simultaneously in the posts list and the user's post list.\r\n        var updates = {};\r\n        updates['/users/' + uid] = userData;\r\n\r\n        return this.firebase.db.ref().update(updates);\r\n    }\r\n\r\n    validateEmail(testEmail) {\r\n        var emailRegex = /^\\S+@\\S+$/;\r\n        return emailRegex.test(String(testEmail).toLowerCase());\r\n    }\r\n\r\n    validatePassword(testPswd) {\r\n        var paswdRegex = /^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{7,15}$/;\r\n        return paswdRegex.test(String(testPswd));\r\n    }\r\n\r\n    hideSignupFields = () => {\r\n        this.setState({ SHOWFIELDS: false });\r\n    }\r\n\r\n    showSignupFields = () => {\r\n        this.setState({ SHOWFIELDS: true });\r\n    }\r\n\r\n    handleUsernameChange = (event) => {\r\n        this.setState({ username: event.target.value });\r\n    }\r\n\r\n    handlePasswordChange = (event) => {\r\n        this.setState({ password: event.target.value });\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        let username = this.state.username;\r\n        let password = this.state.password;\r\n        console.log(`SignUp submit pressed - username ${username}`);\r\n        if (!this.validateEmail(username)) {\r\n            alert('Bad email me thinks :(')\r\n            this.setState({\r\n                username: ''\r\n            });\r\n            return;\r\n        }\r\n        if (!this.validatePassword(password)) {\r\n            alert('Bad password. Must be 7-15 characters with at least 1 numeric digit and a special character.')\r\n            this.setState({\r\n                password: ''\r\n            });\r\n            return;\r\n        }\r\n\r\n        this.firebase.auth.createUserWithEmailAndPassword(username, password).catch(function (error) {\r\n            // Handle Errors here.\r\n            var errorCode = error.code;\r\n            var errorMessage = error.message;\r\n\r\n            console.log(`${errorCode}: ${errorMessage}`)\r\n            return;\r\n            // ...\r\n        });\r\n        \r\n        return;\r\n    }\r\n\r\n    handleGotoSignIn = () => {\r\n        this.props.gotoSignIn(\"signin\");\r\n        console.log(\"Goto signin pressed\");\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.SHOWFIELDS) {\r\n            return (\r\n                <div id=\"signup-div\">\r\n                    <h3>Sign Up</h3>\r\n                    <div>\r\n                        Email:\r\n                        <input id=\"signup-username\" value={this.state.username} onChange={this.handleUsernameChange} />\r\n                    </div>\r\n                    <div>\r\n                        Password:\r\n                        <input type=\"password\" id=\"signup-password\" value={this.state.password} onChange={this.handlePasswordChange} />\r\n                    </div>\r\n                    <div>\r\n                        <button id=\"submit-signup-btn\" onClick={this.handleSubmit} > Sign up! </button>\r\n                    </div>\r\n                    <div>\r\n                        <button id=\"goto-signin-btn\" onClick={this.handleGotoSignIn} > Sign in! </button>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div>\r\n                    One Moment...\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default SignUp;\r\n","import React, { Component } from 'react';\r\nimport '../../styles/main-content.css';\r\nimport Firebase from '../../config/firebaseConfig.js'\r\n\r\n\r\nclass ChangePassword extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: this.props.email\r\n        };\r\n\r\n        this.firebase = new Firebase()\r\n\r\n    }\r\n\r\n\r\n    handleResetPassword = () => {\r\n        this.firebase.auth.sendPasswordResetEmail(this.state.email)\r\n        alert(\"Password reset email sent!\")\r\n        return;\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <h3>Reset Password?</h3>\r\n                <div>\r\n                    <button onClick={this.handleResetPassword} > Confirm Reset Password </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default ChangePassword;\r\n","import React, { Component } from 'react';\r\nimport '../../styles/main-content.css';\r\n\r\nimport TESTSongArt from '../../assets/TESTdarkside.jpeg'\r\n\r\nclass SongListItem extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n        console.log(this.props.song.duration)\r\n        console.log(\"song list item dur:\" + this.props.song.duration)\r\n    }\r\n\r\n    handlePlay = () => {\r\n        // pass song to SongWall, which will pass on to App\r\n        console.log(\"SongListItem play: \" + this.props.song.songName)\r\n        this.props.setSong(this.props.song);\r\n    }\r\n\r\n    handleUploaderClick = () => {\r\n        console.log(\"SongListItem uploader: \" + this.props.song.uploader)\r\n        this.props.setProfile(this.props.song.uploader);\r\n    }\r\n\r\n    handleSongNameClick = () => {\r\n        this.props.setSongDetails(this.props.song.id);\r\n    }\r\n\r\n    formatMinutesSeconds(s) { return (s - (s %= 60)) / 60 + (9 < s ? ':' : ':0') + s }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"SongListItem\">\r\n                <div>\r\n                    <button className=\"Song-Item-Play-Btn\" onClick={this.handlePlay}>\r\n                        <img src={TESTSongArt} className=\"songArt\" alt=\"Song Art\" />\r\n                        {this.formatMinutesSeconds(this.props.song.duration)} &#9654;\r\n                    </button>\r\n                </div>\r\n\r\n                <div className=\"songListItemRight\">\r\n                    <div className=\"songHeader\">\r\n                        <div>\r\n                            <div className=\"songName\">\r\n                                <button onClick={this.handleSongNameClick}>{this.props.song.songName}</button>\r\n                            </div>\r\n                            <div className=\"artistName\">\r\n                                <i>by</i> {\" \" + this.props.song.artist}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"recordingDate\">\r\n                            {new Intl.DateTimeFormat('en-GB', {\r\n                                year: 'numeric',\r\n                                month: 'long',\r\n                                day: '2-digit'\r\n                            }).format(this.props.song.recorded)}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"songInfo\">\r\n                        {this.props.song.info}\r\n                    </div>\r\n\r\n                    <button className=\"songList-Uploader-Btn\" onClick={this.handleUploaderClick}>Uploader: {this.props.song.uploader}</button>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SongListItem;\r\n","import React, { Component } from 'react';\r\nimport '../../styles/main-content.css';\r\nimport Firebase from '../../config/firebaseConfig.js'\r\n\r\nimport SongListItem from '../list-items/SongListItem.js'\r\n\r\n\r\nclass SongWall extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tsongs: [],\r\n\t\t\tlastProps: null\r\n\t\t};\r\n\r\n\t\tthis.firebase = new Firebase()\r\n\t\t\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconsole.log(\"SongWall component mounted\")\r\n\t\tthis.getSongs()\r\n\t}\r\n\r\n\tgetSongs = () => {\r\n\t\t// Songs branch of tree\r\n\t\tvar ref = this.firebase.db.ref().child('songs')\r\n\r\n\t\tref.on('child_added', snapshot => {\r\n\t\t\tconst previousSongs = this.state.songs;\r\n\t\t\tpreviousSongs.push({\r\n\t\t\t\turl: snapshot.val().url,\r\n\t\t\t\tsongName: snapshot.val().songName,\r\n\t\t\t\tartist: snapshot.val().artist,\r\n\t\t\t\trecorded: snapshot.val().recorded,\r\n\t\t\t\tinfo: snapshot.val().info,\r\n\t\t\t\tuploader: snapshot.val().uploader,\r\n\t\t\t\tuploaderName: snapshot.val().uploaderName,\r\n\t\t\t\tuploaded: snapshot.val().uploaded,\r\n\t\t\t\tpublished: snapshot.val().published,\r\n\t\t\t\tid: snapshot.val().id,\r\n\t\t\t\tduration: snapshot.val().duration\r\n\t\t\t});\r\n\t\t\tthis.setState({\r\n\t\t\t\tsongs: previousSongs\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\thandleSetSong = (setValue) => {\r\n\t\t// set song in App.js\r\n\t\tconsole.log(\"SongWall: handleSetSong(\" + setValue.songName);\r\n\t\tthis.props.setSong(setValue);\r\n\t}\r\n\r\n\tgotoProfile = (uid) => {\r\n\t\tconsole.log(\"SongWall: gotoProfile(\" + uid);\r\n\t\tthis.props.gotoProfile(uid);\r\n\t}\r\n\r\n\tgotoSongDetails = (id) => {\r\n\t\tconsole.log(\"SongWall: gotoSongDetails(\" + id);\r\n\t\tthis.props.gotoSongDetails(id)\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div id=\"Songs-List\">\r\n\t\t\t\t{this.state.songs.map((song) => (\r\n\t\t\t\t\t<SongListItem\r\n\t\t\t\t\t\tsong={song}\r\n\t\t\t\t\t\tkey={song.id}\r\n\t\t\t\t\t\tsetSong={this.handleSetSong}\r\n\t\t\t\t\t\tsetProfile={this.gotoProfile}\r\n\t\t\t\t\t\tsetSongDetails={this.gotoSongDetails}/>\r\n\t\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default SongWall;\r\n","import React, { Component } from 'react';\r\nimport '../../styles/main-content.css';\r\nimport Firebase from '../../config/firebaseConfig.js';\r\n\r\nimport TESTSongArt from '../../assets/TESTdarkside.jpeg';\r\n\r\nclass PublishListItem extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            song: this.props.song\r\n        };\r\n\r\n        this.firebase = new Firebase()\r\n    }\r\n\r\n    handlePlay = () => {\r\n        // pass song to Studio fragment, which will pass on to App\r\n        this.props.playSong(this.props.song);\r\n    }\r\n\r\n    handlePublishPressed = () => {\r\n        let pubSong = this.props.song;\r\n\r\n        console.log(\"pubstate\" + pubSong.published)\r\n\r\n        if (pubSong.published === undefined || pubSong.published === null) {\r\n            let date = new Date()\r\n            let timestamp = date.getTime()\r\n            pubSong.published = timestamp;\r\n            this.setState({ song: pubSong });\r\n\r\n            console.log(\"Publish: \" + pubSong)\r\n\r\n            // Updates the new song's data simultaneously to the user's song list (/usersongs/UID/*), and the published songs list (/songs/*).\r\n            var pub = {};\r\n            pub['/songs/' + pubSong.id] = pubSong; // Add to main songs list (published)\r\n            pub['/published-songs/' + pubSong.uploader + '/' + pubSong.id] = pubSong; // add to user's published list\r\n            pub['/user-songs/' + pubSong.uploader + '/' + pubSong.id] = pubSong; // add to user's full list\r\n\r\n            return this.firebase.db.ref().update(pub);\r\n        } else {\r\n            pubSong.published = null;\r\n            this.setState({ song: pubSong });\r\n\r\n            console.log(\"Unpublish: \" + pubSong)\r\n\r\n            this.firebase.db.ref().child('songs').child(pubSong.id).remove(); // Remove from main songs list\r\n            this.firebase.db.ref().child('published-songs').child(pubSong.uploader).child(pubSong.id).remove(); // Remove from user's published list\r\n\r\n            var unpub = {};\r\n            unpub['/user-songs/' + pubSong.uploader + '/' + pubSong.id] = pubSong; // update song in user-songs\r\n\r\n            return this.firebase.db.ref().update(unpub);\r\n        }\r\n    }\r\n\r\n    formatMinutesSeconds(s) { return (s - (s %= 60)) / 60 + (9 < s ? ':' : ':0') + s }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"PublishSongListItem\">\r\n\r\n                <div>\r\n                    <button className=\"Publish-Song-Play-Btn\" onClick={this.handlePlay}>\r\n                        <img src={TESTSongArt} className=\"PublishSongArt\" alt=\"Song Art\" />\r\n                        {this.formatMinutesSeconds(this.props.song.duration)} &#9654;\r\n                    </button>\r\n                </div>\r\n\r\n                <div className=\"songListItemRight\">\r\n                    <div className=\"songHeader\">\r\n                        <div>\r\n                            <div className=\"PublishSongName\">\r\n                                {this.props.song.songName}\r\n                            </div>\r\n                            <div className=\"PublishSongArtistName\">\r\n                                <i>by</i> {\" \" + this.props.song.artist}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"PublishSongRecordingDate\">\r\n                            {new Intl.DateTimeFormat('en-GB', {\r\n                                year: 'numeric',\r\n                                month: 'long',\r\n                                day: '2-digit'\r\n                            }).format(this.props.song.recorded)}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"PublishSongInfo\">\r\n                        {this.props.song.info}\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    {(() => {\r\n                        if (this.state.song.published) {\r\n                            return (\r\n                                <button className=\"PublishSong-unpublish-button\" onClick={this.handlePublishPressed}>\r\n                                    🛇<br />\r\n                                    UNPUBLISH\r\n                                </button>\r\n                            );\r\n                        } else {\r\n                            return (\r\n                                <button className=\"PublishSong-publish-button\" onClick={this.handlePublishPressed}>\r\n                                    ✓<br />\r\n                                    PUBLISH\r\n                                </button>\r\n                            );\r\n                        }\r\n                    })()}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PublishListItem;\r\n","import React, { Component } from 'react';\r\nimport '../../styles/main-content.css';\r\nimport Firebase from '../../config/firebaseConfig.js'\r\n\r\nimport PublishListItem from '../list-items/PublishListItem.js'\r\n\r\n\r\nclass Studio extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tUID: this.props.UID,\r\n\t\t\tsongs: []\r\n\t\t};\r\n\r\n\t\tthis.firebase = new Firebase()\r\n\t\tthis.getSongs()\r\n\t}\r\n\r\n\thandleUpload = () => {\r\n\t\tthis.props.goto(\"postsong\");\r\n\t}\r\n\r\n\thandleRecord = () => {\r\n\t\tthis.props.goto(\"record\");\r\n\t}\r\n\r\n\thandlePlaySong = (setValue) => {\r\n\t\t// set song in App.js\r\n\t\tthis.props.playSong(setValue);\r\n\t}\r\n\r\n\tgetSongs = () => {\r\n\t\t// Posts branch of tree\r\n\t\tvar ref = this.firebase.db.ref().child('user-songs').child(this.state.UID);\r\n\r\n\t\tref.on('child_added', snapshot => {\r\n\t\t\tconst previousSongs = this.state.songs;\r\n\t\t\tpreviousSongs.push({\r\n\t\t\t\tsongName: snapshot.val().songName,\r\n\t\t\t\turl: snapshot.val().url,\r\n\t\t\t\tartist: snapshot.val().artist,\r\n\t\t\t\trecorded: snapshot.val().recorded,\r\n\t\t\t\tinfo: snapshot.val().info,\r\n\t\t\t\tuploader: snapshot.val().uploader,\r\n\t\t\t\tuploaderName: snapshot.val().uploaderName,\r\n\t\t\t\tuploaded: snapshot.val().uploaded,\r\n\t\t\t\tpublished: snapshot.val().published,\r\n\t\t\t\tid: snapshot.val().id,\r\n\t\t\t\tduration: snapshot.val().duration\r\n\t\t\t});\r\n\t\t\tthis.setState({\r\n\t\t\t\tsongs: previousSongs\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<div id=\"Studio-Add-Song-Btns\">\r\n\t\t\t\t\t<button id=\"Studio-Upload-Btn\" onClick={this.handleUpload}>Upload</button>\r\n\t\t\t\t\t<button id=\"Studio-Record-Btn\" onClick={this.handleRecord}>Record</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div id=\"Studio-Songs-List\">\r\n\t\t\t\t\t{this.state.songs.map((song) => (<PublishListItem song={song} key={song.id} playSong={this.handlePlaySong}/>))}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Studio;\r\n","import React, { Component } from 'react';\r\nimport '../../styles/main-content.css';\r\nimport Firebase from '../../config/firebaseConfig.js';\r\nimport getBlobDuration from 'get-blob-duration';\r\n\r\n\r\nclass RecordSong extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: this.props.user,\r\n            recording: false\r\n        };\r\n\r\n        this.firebase = new Firebase()\r\n    }\r\n\r\n    componentDidMount() {\r\n        navigator.mediaDevices.getUserMedia({ audio: true, video: false })\r\n            .then((stream) => {\r\n                this.mediaRecorder = new MediaRecorder(stream)\r\n                this.audioChunks = [];\r\n                this.mediaRecorder.ondataavailable = e => {\r\n                    if (e.data && e.data.size > 0) {\r\n                        this.audioChunks.push(e.data);\r\n                    }\r\n                };\r\n            })\r\n    }\r\n\r\n    postToFirebase(audioBlob, duration) {\r\n        let date = new Date()\r\n        let timestamp = date.getTime()\r\n\r\n        // Get a key for a new song.\r\n        var newPostKey = this.firebase.db.ref().child('user-songs').child(this.state.user.uid).push().key;\r\n\r\n        // Get storage reference and push file blob \r\n        var storageRef = this.firebase.storage.ref().child('songs');\r\n        const metadata = { contentType: 'audio/mpeg' };\r\n        const storageTask = storageRef.child(this.state.user.uid).child(newPostKey).child(newPostKey + \".mp3\").put(audioBlob, metadata);\r\n        let songData;\r\n        storageTask\r\n            .then(snapshot => snapshot.ref.getDownloadURL())\r\n            .then(url => {\r\n                console.log(url)\r\n                // A song entry for database.\r\n                songData = {\r\n                    url: url,\r\n                    id: newPostKey,\r\n                    songName: newPostKey,\r\n                    artist: this.state.user.username,\r\n                    info: \"\",\r\n                    recorded: timestamp,\r\n                    uploaded: timestamp,\r\n                    uploader: this.state.user.uid,\r\n                    uploaderName: this.state.user.username,\r\n                    published: null,\r\n                    duration: duration,\r\n                    saving: false\r\n                };\r\n\r\n\r\n                // Write the new song's data the user's song list.\r\n                var updates = {};\r\n                updates['/user-songs/' + this.state.user.uid + '/' + newPostKey] = songData;\r\n\r\n                return this.firebase.db.ref().update(updates);\r\n            }).then(() => {\r\n                this.props.goto('studio');\r\n            });\r\n\r\n    }\r\n\r\n    async saveAudio() {\r\n        // convert saved chunks to blob and get duration\r\n        const audioBlob = new Blob(this.audioChunks, { type: 'audio/mpeg-3' });\r\n        const duration = await getBlobDuration(audioBlob)\r\n\r\n        this.postToFirebase(audioBlob, Math.floor(duration))\r\n\r\n    }\r\n\r\n    startRecording = () => {\r\n        // wipe old data chunks\r\n        this.audioChunks = [];\r\n        // start recorder with 10ms buffer\r\n        this.mediaRecorder.start(10);\r\n        // say that we're recording\r\n        this.setState({ recording: true });\r\n    }\r\n\r\n    stopRecording = () => {\r\n        // stop the recorder\r\n        this.mediaRecorder.stop();\r\n        // say that we're not recording\r\n        this.setState({ \r\n            recording: false,\r\n            saving: true\r\n         });\r\n        // save the video to memory\r\n        this.saveAudio();\r\n    }\r\n\r\n\r\n    handleRecordBtn = () => {\r\n        console.log(\"record btn pressed...\")\r\n        if (!this.state.recording) {\r\n            this.startRecording()\r\n        } else {\r\n            this.stopRecording()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.saving) {\r\n            return (\r\n                <div id=\"Record-Page\">\r\n                    <button id=\"Record-Record-Btn\" onClick={this.handleRecordBtn} >\r\n                        {(() => {\r\n                            if (this.state.recording) {\r\n                                return \"STOP\" // TODO: ideally show the recorded time here... 00:00:00\r\n                            } else {\r\n                                return \"RECORD\"\r\n                            }\r\n                        })()}\r\n                    </button>\r\n                    <audio id=\"recordedAudio\" />\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div id=\"Record-Page\">\r\n                    Please wait...\r\n                </div>\r\n            );\r\n        }\r\n\r\n    }\r\n}\r\nexport default RecordSong;\r\n","import React, { Component } from 'react';\r\nimport '../../styles/main-content.css';\r\nimport Firebase from '../../config/firebaseConfig.js'\r\nimport getBlobDuration from 'get-blob-duration';\r\n\r\n\r\nclass PostSong extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            songName: '',\r\n            artistName: '',\r\n            songInfo: '',\r\n            showForm: true\r\n        };\r\n\r\n        this.firebase = new Firebase()\r\n    }\r\n\r\n    handleSongNameChange = (event) => {\r\n        this.setState({ songName: event.target.value });\r\n    }\r\n\r\n    handleArtistNameChange = (event) => {\r\n        this.setState({ artistName: event.target.value });\r\n    }\r\n\r\n    handleSongInfoChange = (event) => {\r\n        this.setState({ songInfo: event.target.value });\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        if (this.state.songName === '' || this.state.artistName === '' || this.state.songInfo === '') {\r\n            alert(\"Missing information for song upload...\")\r\n            return;\r\n        }\r\n        this.setState({ showForm : false }); // hide form\r\n\r\n        console.log(`submitPressed: ${this.state.artistName} - ${this.state.songName}: ${this.state.songInfo}`)\r\n        this.setState({ songName: '' });\r\n        this.setState({ artistName: '' });\r\n        this.setState({ songInfo: '' });\r\n\r\n        // Send to Firebase\r\n        this.postToFirebase(this.props.UID, this.props.username, this.state.songName, this.state.artistName, this.state.songInfo)\r\n    }\r\n\r\n    async postToFirebase(uid, username, songname, artist, info) {\r\n        let date = new Date()\r\n        let timestamp = date.getTime()\r\n\r\n        // Get a key for a new song.\r\n        var newPostKey = this.firebase.db.ref().child('songs').push().key;\r\n\r\n        // Get storage reference and push file blob \r\n        var storageRef = this.firebase.storage.ref().child('songs');\r\n        const file = document.querySelector('#uploadAudioInput').files[0];\r\n        const duration = await getBlobDuration(file)\r\n\r\n        const metadata = { contentType: file.type };\r\n        const storageTask = storageRef.child(this.props.UID).child(newPostKey).child(songname + \".mp3\").put(file, metadata);\r\n        let songData;\r\n        storageTask\r\n            .then(snapshot => snapshot.ref.getDownloadURL())\r\n            .then(url => {\r\n                console.log(url)\r\n                // A song entry for database.\r\n                songData = {\r\n                    url: url,\r\n                    id: newPostKey,\r\n                    songName: songname,\r\n                    artist: artist,\r\n                    info: info,\r\n                    recorded: timestamp,\r\n                    uploaded: timestamp,\r\n                    uploader: uid,\r\n                    uploaderName: username,\r\n                    published: null,\r\n                    duration: Math.floor(duration)\r\n                };\r\n\r\n\r\n                // Write the new song's data the user's song list.\r\n                var updates = {};\r\n                updates['/user-songs/' + uid + '/' + newPostKey] = songData;\r\n\r\n                return this.firebase.db.ref().update(updates);\r\n            }).then(() => {\r\n                this.props.goto('studio');\r\n            });\r\n\r\n    }\r\n\r\n    render() {\r\n        if (this.state.showForm === true) {\r\n            return (\r\n                <div id=\"submit-song-box\">\r\n                    <div>\r\n                        <input\r\n                            accept=\".mp3,.mp4,.wmv,.m4a\"\r\n                            type=\"file\"\r\n                            id=\"uploadAudioInput\" />\r\n                    </div>\r\n                    <div>\r\n                        Song Name:\r\n                        <textarea id=\"song-name-area\" value={this.state.songName} onChange={this.handleSongNameChange} />\r\n                    </div>\r\n                    <div>\r\n                        Artist:\r\n                        <textarea id=\"artist-names-area\" value={this.state.artistName} onChange={this.handleArtistNameChange} />\r\n                    </div>\r\n                    <div>\r\n                        Additional Info:\r\n                        <textarea id=\"song-info-area\" value={this.state.songInfo} onChange={this.handleSongInfoChange} />\r\n                    </div>\r\n                    <button id=\"post-button\" onClick={this.handleSubmit}>\r\n                        Upload Song\r\n                </button>\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div>Please Wait...</div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default PostSong;\r\n","import React, { Component } from 'react';\r\nimport '../../styles/main-content.css';\r\nimport Firebase from '../../config/firebaseConfig.js'\r\n\r\nimport TESTprofileImage from '../../assets/TESTprofile-image.png'\r\n\r\n\r\nclass EditProfile extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            user: this.props.user\r\n        };\r\n\r\n        this.firebase = new Firebase()\r\n    }\r\n\r\n    gotoPublicProfile = () => {\r\n        this.props.gotoProfile(this.state.user.uid);\r\n    }\r\n\r\n    handleUsernameChange = (event) => {\r\n        this.setState({ username: event.target.value });\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        // TODO\r\n    }\r\n\r\n    handleChangePassword = () => {\r\n        this.props.goto(\"changepw\")\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"Profile-Page\">\r\n                <div id=\"Profile-Page-Header\">\r\n                    <div id=\"Profile-Page-Header-Left\">\r\n                        <button id=\"view-public-btn\" onClick={this.gotoPublicProfile}>View Public</button>\r\n                        <div>\r\n                            Name: {this.props.user.name}\r\n                        </div>\r\n                        <div>\r\n                            Username: {this.props.user.username}\r\n                        </div>\r\n                        <div>\r\n                            Email: {this.props.user.email}\r\n                        </div>\r\n                        <div>\r\n                            Bio: stuff stuff stuff stuff stuff\r\n                        </div>\r\n\r\n                        <button onClick={this.handleChangePassword}>Change Password</button>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <img src={TESTprofileImage} className=\"Profile-Page-img\" alt=\"Profile\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default EditProfile;\r\n","import React, { Component } from 'react';\r\nimport '../../styles/main-content.css';\r\n\r\nimport TESTSongArt from '../../assets/TESTdarkside.jpeg'\r\n\r\nclass ProfileSongItem extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    handlePlay = () => {\r\n        // pass song to SongWall, which will pass on to App\r\n        this.props.setSong(this.props.song);\r\n    }\r\n\r\n    handleUploaderClick = () => {\r\n        this.props.setProfile(this.props.song.uploader);\r\n    }\r\n\r\n    handleSongNameClick = () => {\r\n        this.props.setSongDetails(this.props.song.id);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"SongListItem\">\r\n                <div>\r\n                    <button className=\"Song-Item-Play-Btn\" onClick={this.handlePlay}>\r\n                        <img src={TESTSongArt} className=\"songArt\" alt=\"Song Art\" />\r\n                        {this.props.song.songLength} &#9654;\r\n                    </button>\r\n                </div>\r\n\r\n                <div className=\"songListItemRight\">\r\n                    <div className=\"songHeader\">\r\n                        <div>\r\n                            <div className=\"songName\">\r\n                                <button onClick={this.handleSongNameClick}>{this.props.song.songName}</button>\r\n                            </div>\r\n                            <div className=\"artistName\">\r\n                                <i>by</i> {\" \" + this.props.song.artist}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"recordingDate\">\r\n                            {new Intl.DateTimeFormat('en-GB', {\r\n                                year: 'numeric',\r\n                                month: 'long',\r\n                                day: '2-digit'\r\n                            }).format(this.props.song.recorded)}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"songInfo\">\r\n                        {this.props.song.info}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProfileSongItem;\r\n","import React, { Component } from 'react';\r\nimport '../../styles/main-content.css';\r\nimport Firebase from '../../config/firebaseConfig.js'\r\n\r\nimport TESTprofileImage from '../../assets/TESTprofile-image.png'\r\n\r\nimport ProfileSongItem from '../list-items/ProfileSongItem.js' // TODO: make special listitem for Profile page\r\n\r\n\r\nclass Profile extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: null,\r\n            songs: [],\r\n            profileId: this.props.profileId\r\n        };\r\n\r\n        this.firebase = new Firebase()\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getUser();\r\n        this.getSongs();\r\n    }\r\n\r\n    getUser = () => {\r\n        // Songs branch of tree\r\n        var ref = this.firebase.db.ref().child('users').child(this.props.profileId);\r\n\r\n        ref.on(\"value\", (snapshot) => {\r\n            this.setState({\r\n                user: snapshot.val(),\r\n            });\r\n        }, function (errorObject) {\r\n            console.log(\"User profile get failed: \" + errorObject.code);\r\n        });\r\n    }\r\n\r\n    handleSetSong = (setValue) => {\r\n        console.log(setValue)\r\n        // set song in App.js\r\n        this.props.setSong(setValue);\r\n    }\r\n\r\n    gotoSongDetails = (id) => {\r\n        console.log(id);\r\n        this.props.gotoSongDetails(id)\r\n    }\r\n\r\n    getSongs = () => {\r\n        // User's published songs\r\n        var ref = this.firebase.db.ref().child('published-songs').child(this.props.profileId);\r\n\r\n        ref.on('child_added', snapshot => {\r\n            const previousSongs = this.state.songs;\r\n            previousSongs.push({\r\n                url: snapshot.val().url,\r\n                songName: snapshot.val().songName,\r\n                artist: snapshot.val().artist,\r\n                recorded: snapshot.val().recorded,\r\n                info: snapshot.val().info,\r\n                uploader: snapshot.val().uploader,\r\n                uploaderName: snapshot.val().uploaderName,\r\n                uploaded: snapshot.val().uploaded,\r\n                published: snapshot.val().published,\r\n                id: snapshot.val().id,\r\n                duration: snapshot.val().id\r\n            });\r\n            this.setState({\r\n                songs: previousSongs\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.user !== null) {\r\n            return (\r\n                <div id=\"Profile-Page\">\r\n                    <div id=\"Profile-Page-Header\">\r\n                        <div id=\"Profile-Page-Header-Left\">\r\n                            <div>\r\n                                Name: {this.state.user.name}\r\n                            </div>\r\n                            <div>\r\n                                Username: {this.state.user.username}\r\n                            </div>\r\n                            <div>\r\n                                Email: {this.state.user.email}\r\n                            </div>\r\n                            <div>\r\n                                Bio: stuff stuff stuff stuff stuff\r\n                        </div>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <img src={TESTprofileImage} className=\"Profile-Page-img\" alt=\"Profile\" />\r\n                        </div>\r\n                    </div>\r\n                    <div id=\"Profile-Songs-List\">\r\n                        {this.state.songs.map((song) => (<ProfileSongItem song={song} key={song.id} setSong={this.handleSetSong} setSongDetails={this.gotoSongDetails} />))}\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div></div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Profile;\r\n","import React, { Component } from 'react';\r\nimport '../../styles/main-content.css';\r\nimport Firebase from '../../config/firebaseConfig.js'\r\n\r\nimport TESTimage from '../../assets/TESTdarkside.jpeg'\r\n\r\nclass Profile extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            songId: this.props.songId,\r\n            song: null\r\n        };\r\n\r\n        this.firebase = new Firebase()\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div id=\"Song-Details-Page\">\r\n                <div>\r\n                    {this.props.song.songName}\r\n                </div>\r\n                <img src={TESTimage} className=\"Song-Details-img\" alt=\"Song art\" />\r\n                <div>\r\n                    {this.props.song.artist}\r\n                </div>\r\n                <div>\r\n                    {this.props.song.info}\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default Profile;\r\n","import React, { Component } from 'react';\r\nimport '../../styles/music-player.css';\r\n\r\nclass TopBarPlayer extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tsong: null,\r\n\t\t\tmusicPosition: \"0%\",\r\n\t\t\tvolumePosition: \"100%\",\r\n\t\t\tsongDuration: '',\r\n\t\t\tcurrentPosition: ''\r\n\t\t};\r\n\r\n\t\tthis.audioPlayer = new Audio();\r\n\t\tthis.audioPlayer.loop = false;\r\n\t\tthis.audioPlayer.addEventListener('timeupdate', () => {\r\n\t\t\tvar position = this.audioPlayer.currentTime / this.audioPlayer.duration;\r\n\t\t\tthis.setState({\r\n\t\t\t\tmusicPosition: (position * 100) + '%',\r\n\t\t\t\tcurrentPosition: this.formatMinutesSeconds(Math.floor(this.audioPlayer.currentTime))\r\n\t\t\t});\r\n\t\t});\r\n\t\tthis.audioPlayer.addEventListener('volumechange', () => {\r\n\t\t\tvar position = this.audioPlayer.volume;\r\n\t\t\tthis.setState({ volumePosition: (position * 100) + '%' });\r\n\t\t});\r\n\t\t//this.setState({ songDuration: this.formatMinutesSeconds(Math.floor(this.props.song.duration)) });\r\n\r\n\t\tthis.seekBar = React.createRef()\r\n\t\tthis.volumeBar = React.createRef()\r\n\t}\r\n\r\n\tcomponentWillUpdate(props) {\r\n\t\tif (props.song === null || props.song.url === undefined) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (this.state.song !== null && props.song.id === this.state.song.id) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.setState({ \r\n\t\t\tsong: props.song,\r\n\t\t\tsongDuration: this.formatMinutesSeconds(Math.floor(props.song.duration)) \r\n\t\t});\r\n\t\tthis.audioPlayer.src = props.song.url;\r\n\t\tthis.audioPlayer.play();\r\n\t}\r\n\r\n\thandlePlayOrPause = () => {\r\n\t\tif (this.audioPlayer.src === '') {\r\n\t\t\talert(\"Error: nothing to play!\")\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (this.audioPlayer.ended || this.audioPlayer.paused) {\r\n\t\t\tthis.audioPlayer.play();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!this.audioPlayer.ended && !this.audioPlayer.paused) {\r\n\t\t\tthis.audioPlayer.pause();\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n\thandleSeekBarClick = (e) => {\r\n\t\tlet seekRatio = (e.pageX - e.target.offsetLeft) / this.seekBar.current.offsetWidth\r\n\r\n\t\tthis.audioPlayer.currentTime = (this.audioPlayer.duration * seekRatio)\r\n\t}\r\n\r\n\thandleVolumeBarClick = (e) => {\r\n\t\tlet volumeRatio = 1 - ((e.pageY - e.target.offsetTop) / this.volumeBar.current.offsetHeight)\r\n\t\tif (volumeRatio <= 0.05) {\r\n\t\t\tvolumeRatio = 0;\r\n\t\t} else if (volumeRatio >= 0.95) {\r\n\t\t\tvolumeRatio = 1;\r\n\t\t}\r\n\r\n\t\tthis.audioPlayer.volume = volumeRatio;\r\n\t}\r\n\r\n\tformatMinutesSeconds(s) { return (s - (s %= 60)) / 60 + (9 < s ? ':' : ':0') + s }\r\n\r\n\trender() {\r\n\t\tif (this.state.song !== null) {\r\n\t\t\treturn (\r\n\t\t\t\t<div id=\"Top-Bar-Player\">\r\n\t\t\t\t\t<div id=\"Top-Player-Center-Div\">\r\n\t\t\t\t\t\t<div id=\"Top-Player-Info-Div\">\r\n\t\t\t\t\t\t\t<div id=\"Top-Player-Artist\">\r\n\t\t\t\t\t\t\t\t{this.state.song.artist}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t&nbsp;-&nbsp;\r\n\t\t\t\t\t\t<div id=\"Top-Player-Song\">\r\n\t\t\t\t\t\t\t\t{this.state.song.songName}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div id=\"Top-Player-Time-Div\">\r\n\t\t\t\t\t\t\t<div className=\"Top-Player-Time-Text-Div\">\r\n\t\t\t\t\t\t\t\t{this.state.currentPosition}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div id=\"seek-bar\" ref={this.seekBar} onClick={this.handleSeekBarClick}>\r\n\t\t\t\t\t\t\t\t<div id=\"fill\" style={{ width: this.state.musicPosition }}></div>\r\n\t\t\t\t\t\t\t\t<div id=\"handle\"></div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"Top-Player-Time-Text-Div\">\r\n\t\t\t\t\t\t\t\t{this.state.songDuration}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div id=\"Top-Player-Btns\">\r\n\t\t\t\t\t\t\t<button id=\"TP-Play-Pause-Btn\" onClick={this.handlePlayOrPause}>&#9654;</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div id=\"volume-bar\" ref={this.volumeBar} onClick={this.handleVolumeBarClick}>\r\n\t\t\t\t\t\t<div id=\"volume-fill\" style={{ height: this.state.volumePosition }}></div>\r\n\t\t\t\t\t\t<div id=\"volume-handle\"></div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn (\r\n\t\t\t\t<div></div>\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\nexport default TopBarPlayer;\r\n","import React, { Component } from 'react';\nimport './styles/App.css';\nimport Firebase from './config/firebaseConfig.js'\n\n// Assets\nimport cornerLogo from './assets/corner-logo-blinq.png'\n\n\n// Auth\nimport SignIn from './components/auth/SignIn.js'\nimport SignUp from './components/auth/SignUp.js'\nimport ChangePassword from './components/auth/ChangePassword.js'\n\n// Main Content\nimport SongWall from './components/main-content/SongWall.js'\nimport Studio from './components/main-content/Studio.js'\nimport RecordSong from './components/main-content/RecordSong.js'\nimport PostSong from './components/main-content/PostSong.js'\nimport EditProfile from './components/main-content/EditProfile.js'\nimport Profile from './components/main-content/Profile.js'\nimport SongDetails from './components/main-content/SongDetails.js'\n\n// Music Player\nimport TopBarPlayer from './components/music-player/TopBarPlayer.js'\n\n\nclass App extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tmainContent: 'signin', // signin, signup, postsong, songwall, songdetails, studio, profile, editprofile, changepw, record, etc.\n\t\t\tUID: null,\n\t\t\tusername: '',\n\t\t\tuser: null,\n\t\t\tcurrentSong: null, // for playing\n\t\t\tviewSong: null, // to view SongDetails page\n\t\t\tviewProfileId: null // set to ID of profile you want to view\n\t\t};\n\n\t\tthis.firebase = new Firebase()\n\t\tthis.firebase.auth.onAuthStateChanged((user) => {\n\t\t\tif (user) {\n\t\t\t\t//console.log(`UID: ${user.uid}`);\n\t\t\t\tthis.setState({\n\t\t\t\t\tUID: user.uid,\n\t\t\t\t\temail: user.email,\n\t\t\t\t\tuser: user\n\t\t\t\t});\n\t\t\t\tthis.getUsername();\n\t\t\t}\n\t\t});\n\n\t}\n\n\tgetUsername = () => {\n\t\t// Get user's Username from database\n\t\tvar ref = this.firebase.db.ref().child('users').child(this.state.UID)\n\n\t\tref.on(\"value\", (snapshot) => {\n\t\t\tthis.setState({\n\t\t\t\tuser: snapshot.val(),\n\t\t\t\tusername: snapshot.val().username // probably just need to set user in state\n\t\t\t});\n\t\t}, function (errorObject) {\n\t\t\tconsole.log(\"The read failed: \" + errorObject.code);\n\t\t});\n\n\t}\n\n\thandleSignOut = () => {\n\t\tthis.setState({ UID: null });\n\t\tthis.firebase.auth.signOut().then(function () {\n\t\t\t// Sign-out successful.\n\t\t\tconsole.log(`signed out`)\n\t\t}).catch(function (error) {\n\t\t\t// An error happened.\n\t\t\tconsole.log(`Error signing out: ${error}`)\n\t\t});\n\t}\n\n\thandleSignIn = () => {\n\t\t// set UID, page to SongWall\n\t\tthis.setState({\n\t\t\tmainContent: 'songwall'\n\t\t});\n\t}\n\n\thandleSetSong = (setValue) => {\n\t\tconsole.log(\"App: handleSetSong( \" + setValue.songName)\n\t\tif (this.state.currentSong !== null && setValue.url !== this.state.currentSong.url) {\n\t\t\tthis.setState({\n\t\t\t\tcurrentSong: setValue\n\t\t\t});\n\t\t} else if (this.state.currentSong == null) {\n\t\t\tthis.setState({\n\t\t\t\tcurrentSong: setValue\n\t\t\t});\n\t\t}\n\t}\n\n\tsetMainContent = (setValue) => {\n\t\tthis.setState({ mainContent: setValue });\n\t}\n\n\thandleSearch = () => {\n\t\talert(\"App.handleSearch... nothing doing yet\")\n\t}\n\n\topenSongWall = () => {\n\t\tif (this.state.mainContent !== 'songwall') {\n\t\t\tthis.setState({ mainContent: 'songwall' });\n\t\t}\n\t}\n\n\topenPostSong = () => {\n\t\tif (this.state.mainContent !== 'postsong') {\n\t\t\tthis.setState({ mainContent: 'postsong' });\n\t\t}\n\t}\n\n\topenStudio = () => {\n\t\tif (this.state.mainContent !== 'studio') {\n\t\t\tthis.setState({ mainContent: 'studio' });\n\t\t}\n\t}\n\n\topenRecord = () => {\n\t\tif (this.state.mainContent !== 'record') {\n\t\t\tthis.setState({ mainContent: 'record' });\n\t\t}\n\t}\n\n\topenEditProfile = () => {\n\t\tif (this.state.mainContent !== 'editprofile') {\n\t\t\tthis.setState({ mainContent: 'editprofile' });\n\t\t}\n\t}\n\n\tgotoProfile = (uid) => {\n\t\tconsole.log(\"goto profile: \" + uid)\n\n\t\tif (this.state.viewProfileId !== uid) {\n\t\t\tthis.setState({ viewProfileId: uid });\n\t\t}\n\t\tif (this.state.mainContent !== 'profile') {\n\t\t\tthis.setState({ mainContent: 'profile' });\n\t\t}\n\t}\n\n\tgotoSongDetails = (songId) => {\n\t\tconsole.log(\"App: gotoSongDetails(\" + songId)\n\n\t\tif (this.state.viewSong === null || this.state.viewSong.id !== songId) {\n\t\t\tvar ref = this.firebase.db.ref().child('songs').child(songId);\n\n\t\t\tref.once(\"value\", (snapshot) => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tviewSong: snapshot.val()\n\t\t\t\t});\n\t\t\t}).then(() => {\n\t\t\t\tif (this.state.mainContent !== 'songdetails') {\n\t\t\t\t\tthis.setState({ mainContent: 'songdetails' });\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<header className=\"App-body\">\n\t\t\t\t\t<div id=\"App-Inner-Body\">\n\t\t\t\t\t\t<div id=\"App-Header\">\n\t\t\t\t\t\t\t<div className=\"spacer-240w\" />\n\t\t\t\t\t\t\t{(() => {\n\t\t\t\t\t\t\t\tif (this.state.UID) {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<TopBarPlayer song={this.state.currentSong} />\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})()}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div id=\"App-Body-Content\">\n\t\t\t\t\t\t\t<div id=\"Main-Left\">\n\t\t\t\t\t\t\t\t<button id=\"Home-Div\" onClick={this.openSongWall}>\n\t\t\t\t\t\t\t\t\t<img src={cornerLogo} className=\"Blinq-logo\" alt=\"Blinq logo\" />\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t{(() => {\n\t\t\t\t\t\t\t\t\tif (this.state.UID) {\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<div id=\"Main-Left-Menu\">\n\t\t\t\t\t\t\t\t\t\t\t\t<div id=\"Header-Btns\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<button id=\"Profile-Btn\" onClick={this.openEditProfile}>My Profile</button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<button id=\"Logout-Btn\" onClick={this.handleSignOut}>Logout</button>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div id=\"Search-Div\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<input id=\"Search-Input\" />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<button id=\"Search-Btn\" onClick={this.handleSearch}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div id=\"mag-glass\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&#9906;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<button className=\"Main-Left-Menu-Btn\" onClick={this.openStudio}>STUDIO</button>\n\t\t\t\t\t\t\t\t\t\t\t\t<button className=\"Main-Left-Menu-Btn\" onClick={this.openSongWall}>SONG-WALL</button>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\treturn <SignIn signIn={this.handleSignIn} />;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t})()}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div id=\"Main-Content\">\n\t\t\t\t\t\t\t\t{(() => {\n\t\t\t\t\t\t\t\t\tif (this.state.UID) {\n\t\t\t\t\t\t\t\t\t\tswitch (this.state.mainContent) {\n\t\t\t\t\t\t\t\t\t\t\tcase 'songwall':\n\t\t\t\t\t\t\t\t\t\t\t\treturn <SongWall setSong={this.handleSetSong} gotoProfile={this.gotoProfile} gotoSongDetails={this.gotoSongDetails}/>;\n\t\t\t\t\t\t\t\t\t\t\tcase 'studio':\n\t\t\t\t\t\t\t\t\t\t\t\treturn <Studio UID={this.state.UID} goto={this.setMainContent} playSong={this.handleSetSong} />;\n\t\t\t\t\t\t\t\t\t\t\tcase 'postsong':\n\t\t\t\t\t\t\t\t\t\t\t\treturn <PostSong UID={this.state.UID} username={this.state.username} goto={this.setMainContent} />;\n\t\t\t\t\t\t\t\t\t\t\tcase 'record':\n\t\t\t\t\t\t\t\t\t\t\t\treturn <RecordSong user={this.state.user} goto={this.setMainContent} />;\n\t\t\t\t\t\t\t\t\t\t\tcase 'editprofile':\n\t\t\t\t\t\t\t\t\t\t\t\treturn <EditProfile user={this.state.user} gotoProfile={this.gotoProfile} goto={this.setMainContent} />;\n\t\t\t\t\t\t\t\t\t\t\tcase 'changepw':\n\t\t\t\t\t\t\t\t\t\t\t\treturn <ChangePassword email={this.state.email} />;\n\t\t\t\t\t\t\t\t\t\t\tcase 'profile':\n\t\t\t\t\t\t\t\t\t\t\t\treturn <Profile profileId={this.state.viewProfileId} setSong={this.handleSetSong} gotoSongDetails={this.gotoSongDetails}/>;\n\t\t\t\t\t\t\t\t\t\t\tcase 'songdetails':\n\t\t\t\t\t\t\t\t\t\t\t\treturn <SongDetails song={this.state.viewSong} />;\n\t\t\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\t\t\treturn <SongWall setSong={this.handleSetSong} gotoProfile={this.gotoProfile} gotoSongDetails={this.gotoSongDetails} />;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tswitch (this.state.mainContent) {\n\t\t\t\t\t\t\t\t\t\t\tcase 'signup':\n\t\t\t\t\t\t\t\t\t\t\t\treturn <SignUp gotoSignIn={this.setMainContent} />;\n\t\t\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\t\t\treturn <div />;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t})()}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</header>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './js/serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/TESTprofile-image.ab8d4060.png\";","module.exports = __webpack_public_path__ + \"static/media/corner-logo-blinq.c9ee6b5e.png\";"],"sourceRoot":""}